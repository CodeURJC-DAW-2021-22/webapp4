{"ast":null,"code":"import * as Highcharts from 'highcharts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/category.service\";\nimport * as i2 from \"highcharts-angular\";\n\nconst More = require('highcharts/highcharts-more');\n\nMore(Highcharts);\n\nconst Exporting = require('highcharts/modules/exporting');\n\nExporting(Highcharts);\n\nconst ExportData = require('highcharts/modules/export-data');\n\nExportData(Highcharts);\n\nconst Accessibility = require('highcharts/modules/accessibility');\n\nAccessibility(Highcharts);\nexport let GraphicComponent = /*#__PURE__*/(() => {\n  class GraphicComponent {\n    constructor(categoryService) {\n      this.categoryService = categoryService;\n      this.Highcharts = Highcharts;\n      this.updateFlag = false;\n      this.content = [];\n      this.getGraphicData();\n      this.inited(this.content);\n    }\n\n    getGraphicData() {\n      this.categoryService.getGraphicContent().subscribe(value => {\n        value.forEach(d => {\n          this.content.push([d.name.toString(), d.y.valueOf()]);\n        });\n      });\n    }\n\n    inited(content) {\n      this.chartOptions = {\n        chart: {\n          events: {\n            load: function () {\n              var series = this.series[0],\n                  last = series.data[series.data.length - 1];\n              /*setInterval(function() {\r\n                var p1 = Math.random() * 3;\r\n                series.addPoint(p1);\r\n              }, 10)*/\n            }\n          }\n        },\n        series: [{\n          type: 'pie',\n          data: content\n        }]\n      };\n    }\n\n    handleUpdate() {\n      this.chartOptions.title = {\n        text: 'Artículos por categoría'\n      };\n      this.chartOptions.series[0] = {\n        type: 'pie',\n        data: this.content\n      };\n      this.updateFlag = true;\n    }\n\n  }\n\n  GraphicComponent.ɵfac = function GraphicComponent_Factory(t) {\n    return new (t || GraphicComponent)(i0.ɵɵdirectiveInject(i1.CategoryService));\n  };\n\n  GraphicComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GraphicComponent,\n    selectors: [[\"graphic\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\", \"flex-direction\", \"column\"], [\"id\", \"chart\", 1, \"collapse\"], [3, \"Highcharts\", \"options\", \"update\", \"updateChange\"], [\"data-toggle\", \"collapse\", \"data-target\", \"#chart\", 1, \"btn\", \"btn-info\", 3, \"click\"]],\n    template: function GraphicComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"highcharts-chart\", 2);\n        i0.ɵɵlistener(\"updateChange\", function GraphicComponent_Template_highcharts_chart_updateChange_2_listener($event) {\n          return ctx.updateFlag = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function GraphicComponent_Template_button_click_3_listener() {\n          return ctx.handleUpdate();\n        });\n        i0.ɵɵtext(4, \"Mostrar gr\\u00E1fico\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"Highcharts\", ctx.Highcharts)(\"options\", ctx.chartOptions)(\"update\", ctx.updateFlag);\n      }\n    },\n    directives: [i2.HighchartsChartComponent],\n    encapsulation: 2\n  });\n  return GraphicComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}