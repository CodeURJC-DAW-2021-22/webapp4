{"ast":null,"code":"import { EventEmitter, Component, ElementRef, NgZone, Input, Output, NgModule } from '@angular/core';\nimport 'highcharts';\nimport * as ɵngcc0 from '@angular/core';\nlet HighchartsChartComponent = /*#__PURE__*/(() => {\n  class HighchartsChartComponent {\n    constructor(el, _zone // #75\n    ) {\n      this.el = el;\n      this._zone = _zone;\n      this.updateChange = new EventEmitter(true);\n      this.chartInstance = new EventEmitter(); // #26\n    }\n\n    ngOnChanges(changes) {\n      const update = changes.update && changes.update.currentValue;\n\n      if (changes.options || update) {\n        this.wrappedUpdateOrCreateChart();\n\n        if (update) {\n          this.updateChange.emit(false); // clear the flag after update\n        }\n      }\n    }\n\n    wrappedUpdateOrCreateChart() {\n      if (this.runOutsideAngular) {\n        this._zone.runOutsideAngular(() => {\n          this.updateOrCreateChart();\n        });\n      } else {\n        this.updateOrCreateChart();\n      }\n    }\n\n    updateOrCreateChart() {\n      if (this.chart && this.chart.update) {\n        this.chart.update(this.options, true, this.oneToOne || false);\n      } else {\n        this.chart = this.Highcharts[this.constructorType || 'chart'](this.el.nativeElement, this.options, this.callbackFunction || null); // emit chart instance on init\n\n        this.chartInstance.emit(this.chart);\n      }\n    }\n\n    ngOnDestroy() {\n      if (this.chart) {\n        // #56\n        this.chart.destroy();\n        this.chart = null;\n      }\n    }\n\n  }\n\n  HighchartsChartComponent.ɵfac = function HighchartsChartComponent_Factory(t) {\n    return new (t || HighchartsChartComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone));\n  };\n\n  HighchartsChartComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: HighchartsChartComponent,\n    selectors: [[\"highcharts-chart\"]],\n    inputs: {\n      Highcharts: \"Highcharts\",\n      constructorType: \"constructorType\",\n      callbackFunction: \"callbackFunction\",\n      oneToOne: \"oneToOne\",\n      runOutsideAngular: \"runOutsideAngular\",\n      options: \"options\",\n      update: \"update\"\n    },\n    outputs: {\n      updateChange: \"updateChange\",\n      chartInstance: \"chartInstance\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 0,\n    vars: 0,\n    template: function HighchartsChartComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n  return HighchartsChartComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet HighchartsChartModule = /*#__PURE__*/(() => {\n  class HighchartsChartModule {}\n\n  HighchartsChartModule.ɵfac = function HighchartsChartModule_Factory(t) {\n    return new (t || HighchartsChartModule)();\n  };\n\n  HighchartsChartModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: HighchartsChartModule\n  });\n  HighchartsChartModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return HighchartsChartModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HighchartsChartModule, {\n    declarations: [HighchartsChartComponent],\n    exports: [HighchartsChartComponent]\n  });\n})();\n/*\n * Public API Surface of highcharts-angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { HighchartsChartComponent, HighchartsChartModule }; //# sourceMappingURL=highcharts-angular.js.map","map":null,"metadata":{},"sourceType":"module"}