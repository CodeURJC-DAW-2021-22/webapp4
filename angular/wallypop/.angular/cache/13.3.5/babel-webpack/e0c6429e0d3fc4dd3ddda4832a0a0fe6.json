{"ast":null,"code":"import { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst BASE_URL = '/api/auth';\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(http) {\n      this.http = http;\n      this.logged = false;\n      this.reqIsLogged();\n    }\n\n    static handleError(error) {\n      console.log('ERROR:');\n      console.error(error);\n      return throwError('Server error (' + error.status + '): ' + error.text());\n    }\n\n    reqIsLogged() {\n      this.http.get('/api/users', {\n        withCredentials: true\n      }).subscribe(response => {\n        this.user = response;\n        this.logged = true;\n      }, error => {\n        if (error.status !== 404) {\n          console.error('Error inicio sesión: ' + JSON.stringify(error));\n          this.user = undefined;\n        }\n      });\n    }\n\n    logIn(email, pass) {\n      this.http.post(BASE_URL + '/login', {\n        email,\n        password: pass\n      }, {\n        withCredentials: true\n      }).subscribe(response => this.reqIsLogged(), error => alert('Usuario y/o contraseña no válidos'));\n    }\n\n    logOut() {\n      return this.http.post(BASE_URL + '/logout', {\n        withCredentials: true\n      }).subscribe(resp => {\n        console.log('Sesión finalizada con éxito');\n        this.logged = false;\n        this.user = undefined;\n      });\n    }\n\n    isLogged() {\n      return this.logged;\n    }\n\n    isAdmin() {\n      return this.user.is_ADMIN;\n    }\n\n    currentUser() {\n      return this.user;\n    }\n\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}