{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nconst BASE_URL = '/api/';\nexport let FavoriteService = /*#__PURE__*/(() => {\n  class FavoriteService {\n    constructor(httpClient, router) {\n      this.httpClient = httpClient;\n      this.router = router;\n    }\n\n    static handleError(error) {\n      console.log('ERROR:');\n      console.error(error);\n      return throwError('Server error (' + error.status + '): ' + error.text());\n    }\n\n    getFavorites(idUser) {\n      return this.httpClient.get(BASE_URL + 'favorites/' + idUser).pipe(catchError(error => FavoriteService.handleError(error)));\n    }\n\n    getFavorite(idUser, idArticle) {\n      return this.httpClient.get(BASE_URL + 'favorites/' + idUser + '/' + idArticle).pipe(catchError(error => FavoriteService.handleError(error)));\n    }\n\n    addFavorite(idUser, idArticle) {\n      this.httpClient.post(BASE_URL + 'favorites/' + idUser + '/' + idArticle, null).subscribe(response => this.router.navigate(['favorites']), error => this.router.navigate(['favorites']));\n    }\n\n    deleteFavorite(favorite) {\n      return this.httpClient.delete(BASE_URL + 'favorites/' + favorite.id_FAVORITE).pipe(catchError(error => FavoriteService.handleError(error)));\n    }\n\n  }\n\n  FavoriteService.ɵfac = function FavoriteService_Factory(t) {\n    return new (t || FavoriteService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  FavoriteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FavoriteService,\n    factory: FavoriteService.ɵfac,\n    providedIn: 'root'\n  });\n  return FavoriteService;\n})();","map":null,"metadata":{},"sourceType":"module"}